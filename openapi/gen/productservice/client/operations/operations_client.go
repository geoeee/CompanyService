// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new operations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for operations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetAPIV1Products lists
*/
func (a *Client) GetAPIV1Products(params *GetAPIV1ProductsParams) (*GetAPIV1ProductsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV1ProductsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPIV1Products",
		Method:             "GET",
		PathPattern:        "/api/v1/products",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPIV1ProductsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAPIV1ProductsOK), nil

}

/*
GetAPIV1ProductsProductID gets
*/
func (a *Client) GetAPIV1ProductsProductID(params *GetAPIV1ProductsProductIDParams) (*GetAPIV1ProductsProductIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIV1ProductsProductIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPIV1ProductsProductID",
		Method:             "GET",
		PathPattern:        "/api/v1/products/{product_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPIV1ProductsProductIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAPIV1ProductsProductIDOK), nil

}

/*
PostAPIV1Products creates
*/
func (a *Client) PostAPIV1Products(params *PostAPIV1ProductsParams) (*PostAPIV1ProductsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPIV1ProductsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPIV1Products",
		Method:             "POST",
		PathPattern:        "/api/v1/products",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPIV1ProductsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostAPIV1ProductsCreated), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
